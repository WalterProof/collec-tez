{ parameter
    (or (or (or (pair %balance_of
                   (list %requests (pair (address %owner) (nat %token_id)))
                   (contract %callback
                      (list (pair (pair %request (address %owner) (nat %token_id)) (nat %balance)))))
                (pair %mint
                   (pair (address %address) (nat %amount))
                   (pair (string %symbol) (nat %token_id))))
            (or (pair %mutez_transfer (mutez %amount) (address %destination))
                (address %set_administrator)))
        (or (or (bool %set_pause)
                (pair %token_metadata
                   (list %token_ids nat)
                   (lambda %handler
                      (list (pair (nat %token_id)
                                  (pair (string %symbol)
                                        (pair (string %name) (pair (nat %decimals) (map %extras string string))))))
                      unit)))
            (or (contract %token_metadata_regitry address)
                (or (list %transfer
                       (pair (address %from_)
                             (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount))))))
                    (list %update_operators
                       (or (pair %add_operator (address %owner) (address %operator))
                           (pair %remove_operator (address %owner) (address %operator)))))))) ;
  storage
    (pair (pair (address %administrator)
                (pair (nat %all_tokens) (big_map %ledger (pair address nat) nat)))
          (pair (pair (unit %version_20200615_tzip_a57dfe86_nft_mutran_contract)
                      (big_map %operators (pair (address %owner) (address %operator)) unit))
                (pair (bool %paused)
                      (big_map %tokens
                         nat
                         (pair (pair %metadata
                                  (nat %token_id)
                                  (pair (string %symbol)
                                        (pair (string %name) (pair (nat %decimals) (map %extras string string)))))
                               (nat %total_supply)))))) ;
  code { DUP ;
         CDR ;
         SWAP ;
         CAR ;
         IF_LEFT
           { IF_LEFT
               { IF_LEFT
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     { CDR ; CDR ; CAR } ;
                     IF { PUSH string "WrongCondition: ~ self.data.paused" ; FAILWITH } {} ;
                     NIL (pair (pair %request (address %owner) (nat %token_id)) (nat %balance)) ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     ITER { SWAP ;
                            DIG 3 ;
                            DUP ;
                            DUG 4 ;
                            { CAR ; CDR ; CDR } ;
                            DIG 2 ;
                            DUP ;
                            DUG 3 ;
                            CDR ;
                            DIG 3 ;
                            DUP ;
                            DUG 4 ;
                            CAR ;
                            PAIR ;
                            GET ;
                            { IF_NONE { PUSH string "Get-item:190" ; FAILWITH } {} } ;
                            DIG 2 ;
                            DUP ;
                            DUG 3 ;
                            CDR ;
                            DIG 3 ;
                            CAR ;
                            PAIR %owner %token_id ;
                            PAIR %request %balance ;
                            CONS } ;
                     NIL operation ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     CDR ;
                     PUSH mutez 0 ;
                     DIG 3 ;
                     DUP ;
                     DUG 4 ;
                     NIL (pair (pair %request (address %owner) (nat %token_id)) (nat %balance)) ;
                     SWAP ;
                     ITER { CONS } ;
                     DIG 4 ;
                     DROP ;
                     DIG 4 ;
                     DROP ;
                     TRANSFER_TOKENS ;
                     CONS }
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     { CAR ; CAR } ;
                     SENDER ;
                     COMPARE ;
                     EQ ;
                     IF {}
                        { PUSH string "WrongCondition: sp.sender == self.data.administrator" ;
                          FAILWITH } ;
                     DUP ;
                     { CAR ; CDR } ;
                     PUSH nat 1 ;
                     COMPARE ;
                     EQ ;
                     IF {} { PUSH string "WrongCondition: params.amount == 1" ; FAILWITH } ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     { CAR ; CDR ; CAR } ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     { CDR ; CDR } ;
                     COMPARE ;
                     LT ;
                     IF { PUSH string "WrongCondition: ~ (params.token_id < self.data.all_tokens)" ;
                          FAILWITH }
                        {} ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     DUP ;
                     CDR ;
                     SWAP ;
                     CAR ;
                     DUP ;
                     CAR ;
                     SWAP ;
                     { CDR ; CDR } ;
                     DIG 4 ;
                     DUP ;
                     DUG 5 ;
                     { CAR ; CDR ; CAR } ;
                     DUP ;
                     PUSH nat 1 ;
                     DIG 6 ;
                     DUP ;
                     DUG 7 ;
                     { CDR ; CDR } ;
                     ADD ;
                     DUP ;
                     DUG 2 ;
                     COMPARE ;
                     LE ;
                     IF { DROP } { SWAP ; DROP } ;
                     DIG 5 ;
                     DROP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     PAIR ;
                     SWAP ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     { CAR ; CDR ; CDR } ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     { CDR ; CDR } ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     { CAR ; CAR } ;
                     PAIR ;
                     MEM ;
                     IF { SWAP ;
                          DUP ;
                          DUG 2 ;
                          DUP ;
                          CDR ;
                          SWAP ;
                          CAR ;
                          DUP ;
                          CAR ;
                          SWAP ;
                          CDR ;
                          DUP ;
                          CAR ;
                          SWAP ;
                          CDR ;
                          DUP ;
                          DIG 5 ;
                          DUP ;
                          DUG 6 ;
                          { CDR ; CDR } ;
                          DIG 6 ;
                          DUP ;
                          DUG 7 ;
                          { CAR ; CAR } ;
                          PAIR ;
                          DUP ;
                          DUG 2 ;
                          GET ;
                          { IF_NONE { PUSH string "set_in_top-any" ; FAILWITH } {} } ;
                          DROP ;
                          DIG 5 ;
                          DUP ;
                          DUG 6 ;
                          { CAR ; CDR } ;
                          DIG 7 ;
                          { CAR ; CDR ; CDR } ;
                          DIG 7 ;
                          DUP ;
                          DUG 8 ;
                          { CDR ; CDR } ;
                          DIG 8 ;
                          DUP ;
                          DUG 9 ;
                          { CAR ; CAR } ;
                          PAIR ;
                          GET ;
                          { IF_NONE { PUSH string "Get-item:190" ; FAILWITH } {} } ;
                          ADD ;
                          SOME ;
                          SWAP ;
                          UPDATE ;
                          SWAP ;
                          PAIR ;
                          SWAP ;
                          PAIR ;
                          PAIR ;
                          SWAP }
                        { SWAP ;
                          DUP ;
                          CDR ;
                          SWAP ;
                          CAR ;
                          DUP ;
                          CAR ;
                          SWAP ;
                          CDR ;
                          DUP ;
                          CAR ;
                          SWAP ;
                          CDR ;
                          DIG 4 ;
                          DUP ;
                          DUG 5 ;
                          { CAR ; CDR } ;
                          SOME ;
                          DIG 5 ;
                          DUP ;
                          DUG 6 ;
                          { CDR ; CDR } ;
                          DIG 6 ;
                          DUP ;
                          DUG 7 ;
                          { CAR ; CAR } ;
                          PAIR ;
                          UPDATE ;
                          SWAP ;
                          PAIR ;
                          SWAP ;
                          PAIR ;
                          PAIR ;
                          SWAP } ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     { CDR ; CDR ; CDR } ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     { CDR ; CDR } ;
                     MEM ;
                     IF { SWAP ;
                          DUP ;
                          DUG 2 ;
                          DUP ;
                          CAR ;
                          SWAP ;
                          CDR ;
                          DUP ;
                          CAR ;
                          SWAP ;
                          CDR ;
                          DUP ;
                          CAR ;
                          SWAP ;
                          CDR ;
                          DUP ;
                          DIG 5 ;
                          DUP ;
                          DUG 6 ;
                          { CDR ; CDR } ;
                          DUP ;
                          DUG 2 ;
                          GET ;
                          { IF_NONE { PUSH string "set_in_top-any" ; FAILWITH } {} } ;
                          CAR ;
                          DIG 6 ;
                          DUP ;
                          DUG 7 ;
                          { CAR ; CDR } ;
                          DIG 8 ;
                          { CDR ; CDR ; CDR } ;
                          DIG 8 ;
                          DUP ;
                          DUG 9 ;
                          { CDR ; CDR } ;
                          GET ;
                          { IF_NONE { PUSH string "Get-item:429" ; FAILWITH } {} } ;
                          CDR ;
                          ADD ;
                          SWAP ;
                          PAIR ;
                          SOME ;
                          SWAP ;
                          UPDATE ;
                          SWAP ;
                          PAIR ;
                          SWAP ;
                          PAIR ;
                          SWAP ;
                          PAIR ;
                          SWAP }
                        { SWAP ;
                          DUP ;
                          CAR ;
                          SWAP ;
                          CDR ;
                          DUP ;
                          CAR ;
                          SWAP ;
                          CDR ;
                          DUP ;
                          CAR ;
                          SWAP ;
                          CDR ;
                          DIG 4 ;
                          DUP ;
                          DUG 5 ;
                          { CAR ; CDR } ;
                          PUSH (pair (string %name) (pair (nat %decimals) (map %extras string string)))
                               (Pair "" (Pair 0 {})) ;
                          DIG 6 ;
                          DUP ;
                          DUG 7 ;
                          { CDR ; CAR } ;
                          PAIR %symbol ;
                          DIG 6 ;
                          DUP ;
                          DUG 7 ;
                          { CDR ; CDR } ;
                          PAIR %token_id ;
                          PAIR %metadata %total_supply ;
                          SOME ;
                          DIG 5 ;
                          DUP ;
                          DUG 6 ;
                          { CDR ; CDR } ;
                          UPDATE ;
                          SWAP ;
                          PAIR ;
                          SWAP ;
                          PAIR ;
                          SWAP ;
                          PAIR ;
                          SWAP } ;
                     DROP ;
                     NIL operation } }
               { IF_LEFT
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     { CAR ; CAR } ;
                     SENDER ;
                     COMPARE ;
                     EQ ;
                     IF {}
                        { PUSH string "WrongCondition: sp.sender == self.data.administrator" ;
                          FAILWITH } ;
                     DUP ;
                     CDR ;
                     CONTRACT unit ;
                     NIL operation ;
                     SWAP ;
                     { IF_NONE { PUSH unit Unit ; FAILWITH } {} } ;
                     DIG 2 ;
                     CAR ;
                     PUSH unit Unit ;
                     TRANSFER_TOKENS ;
                     CONS }
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     { CAR ; CAR } ;
                     SENDER ;
                     COMPARE ;
                     EQ ;
                     IF {}
                        { PUSH string "WrongCondition: sp.sender == self.data.administrator" ;
                          FAILWITH } ;
                     SWAP ;
                     DUP ;
                     CDR ;
                     SWAP ;
                     { CAR ; CDR } ;
                     DIG 2 ;
                     PAIR ;
                     PAIR ;
                     NIL operation } } }
           { IF_LEFT
               { IF_LEFT
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     { CAR ; CAR } ;
                     SENDER ;
                     COMPARE ;
                     EQ ;
                     IF {}
                        { PUSH string "WrongCondition: sp.sender == self.data.administrator" ;
                          FAILWITH } ;
                     SWAP ;
                     DUP ;
                     CAR ;
                     SWAP ;
                     CDR ;
                     DUP ;
                     CAR ;
                     SWAP ;
                     { CDR ; CDR } ;
                     DIG 3 ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR }
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     { CDR ; CDR ; CAR } ;
                     IF { PUSH string "WrongCondition: ~ self.data.paused" ; FAILWITH } {} ;
                     NIL (pair (nat %token_id)
                               (pair (string %symbol)
                                     (pair (string %name) (pair (nat %decimals) (map %extras string string))))) ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     ITER { SWAP ;
                            DIG 3 ;
                            DUP ;
                            DUG 4 ;
                            { CDR ; CDR ; CDR } ;
                            DIG 2 ;
                            GET ;
                            { IF_NONE { PUSH string "Get-item:523" ; FAILWITH } {} } ;
                            CAR ;
                            CONS } ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     NIL (pair (nat %token_id)
                               (pair (string %symbol)
                                     (pair (string %name) (pair (nat %decimals) (map %extras string string))))) ;
                     SWAP ;
                     ITER { CONS } ;
                     EXEC ;
                     DROP 3 } ;
                 NIL operation }
               { IF_LEFT
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     { CDR ; CDR ; CAR } ;
                     IF { PUSH string "WrongCondition: ~ self.data.paused" ; FAILWITH } {} ;
                     DUP ;
                     NIL operation ;
                     SWAP ;
                     PUSH mutez 0 ;
                     SELF ;
                     DIG 4 ;
                     DROP ;
                     ADDRESS ;
                     TRANSFER_TOKENS ;
                     CONS }
                   { IF_LEFT
                       { SWAP ;
                         DUP ;
                         DUG 2 ;
                         { CDR ; CDR ; CAR } ;
                         IF { PUSH string "WrongCondition: ~ self.data.paused" ; FAILWITH } {} ;
                         DUP ;
                         ITER { DIG 2 ;
                                DUP ;
                                DUG 3 ;
                                { CAR ; CAR } ;
                                SENDER ;
                                COMPARE ;
                                EQ ;
                                IF { PUSH bool True } { DUP ; CAR ; SENDER ; COMPARE ; EQ } ;
                                IF { PUSH bool True }
                                   { DIG 2 ;
                                     DUP ;
                                     DUG 3 ;
                                     { CDR ; CAR ; CDR } ;
                                     SENDER ;
                                     DIG 2 ;
                                     DUP ;
                                     DUG 3 ;
                                     CAR ;
                                     PAIR %owner %operator ;
                                     MEM } ;
                                IF {}
                                   { PUSH string
                                          "WrongCondition: ((sp.sender == self.data.administrator) | (transfer.from_ == sp.sender)) | (self.data.operators.contains(sp.record(operator = sp.sender, owner = transfer.from_)))" ;
                                     FAILWITH } ;
                                DUP ;
                                CDR ;
                                ITER { DUP ;
                                       { CDR ; CDR } ;
                                       PUSH nat 0 ;
                                       COMPARE ;
                                       LT ;
                                       IF {} { PUSH string "TRANSFER_OF_ZERO" ; FAILWITH } ;
                                       DUP ;
                                       { CDR ; CDR } ;
                                       DIG 4 ;
                                       DUP ;
                                       DUG 5 ;
                                       { CAR ; CDR ; CDR } ;
                                       DIG 2 ;
                                       DUP ;
                                       DUG 3 ;
                                       { CDR ; CAR } ;
                                       DIG 4 ;
                                       DUP ;
                                       DUG 5 ;
                                       CAR ;
                                       PAIR ;
                                       GET ;
                                       { IF_NONE { PUSH string "Get-item:190" ; FAILWITH } {} } ;
                                       COMPARE ;
                                       GE ;
                                       IF {}
                                          { PUSH string
                                                 "WrongCondition: self.data.ledger[(transfer.from_, tx.token_id)].balance >= tx.amount" ;
                                            FAILWITH } ;
                                       DIG 3 ;
                                       DUP ;
                                       DUG 4 ;
                                       DUP ;
                                       CDR ;
                                       SWAP ;
                                       CAR ;
                                       DUP ;
                                       CAR ;
                                       SWAP ;
                                       CDR ;
                                       DUP ;
                                       CAR ;
                                       SWAP ;
                                       CDR ;
                                       DUP ;
                                       DIG 5 ;
                                       DUP ;
                                       DUG 6 ;
                                       { CDR ; CAR } ;
                                       DIG 7 ;
                                       DUP ;
                                       DUG 8 ;
                                       CAR ;
                                       PAIR ;
                                       DUP ;
                                       DUG 2 ;
                                       GET ;
                                       { IF_NONE { PUSH string "set_in_top-any" ; FAILWITH } {} } ;
                                       DROP ;
                                       DIG 5 ;
                                       DUP ;
                                       DUG 6 ;
                                       { CDR ; CDR } ;
                                       DIG 9 ;
                                       { CAR ; CDR ; CDR } ;
                                       DIG 7 ;
                                       DUP ;
                                       DUG 8 ;
                                       { CDR ; CAR } ;
                                       DIG 9 ;
                                       DUP ;
                                       DUG 10 ;
                                       CAR ;
                                       PAIR ;
                                       GET ;
                                       { IF_NONE { PUSH string "Get-item:190" ; FAILWITH } {} } ;
                                       SUB ;
                                       ISNAT ;
                                       { IF_NONE { PUSH unit Unit ; FAILWITH } {} } ;
                                       SOME ;
                                       SWAP ;
                                       UPDATE ;
                                       SWAP ;
                                       PAIR ;
                                       SWAP ;
                                       PAIR ;
                                       PAIR ;
                                       DUG 3 ;
                                       DIG 3 ;
                                       DUP ;
                                       DUG 4 ;
                                       { CAR ; CDR ; CDR } ;
                                       SWAP ;
                                       DUP ;
                                       DUG 2 ;
                                       { CDR ; CAR } ;
                                       DIG 2 ;
                                       DUP ;
                                       DUG 3 ;
                                       CAR ;
                                       PAIR ;
                                       MEM ;
                                       IF { DIG 3 ;
                                            DUP ;
                                            DUG 4 ;
                                            DUP ;
                                            CDR ;
                                            SWAP ;
                                            CAR ;
                                            DUP ;
                                            CAR ;
                                            SWAP ;
                                            CDR ;
                                            DUP ;
                                            CAR ;
                                            SWAP ;
                                            CDR ;
                                            DUP ;
                                            DIG 5 ;
                                            DUP ;
                                            DUG 6 ;
                                            { CDR ; CAR } ;
                                            DIG 6 ;
                                            DUP ;
                                            DUG 7 ;
                                            CAR ;
                                            PAIR ;
                                            DUP ;
                                            DUG 2 ;
                                            GET ;
                                            { IF_NONE { PUSH string "set_in_top-any" ; FAILWITH } {} } ;
                                            DROP ;
                                            DIG 5 ;
                                            DUP ;
                                            DUG 6 ;
                                            { CDR ; CDR } ;
                                            DIG 9 ;
                                            { CAR ; CDR ; CDR } ;
                                            DIG 7 ;
                                            DUP ;
                                            DUG 8 ;
                                            { CDR ; CAR } ;
                                            DIG 8 ;
                                            DUP ;
                                            DUG 9 ;
                                            CAR ;
                                            PAIR ;
                                            GET ;
                                            { IF_NONE { PUSH string "Get-item:190" ; FAILWITH } {} } ;
                                            ADD ;
                                            SOME ;
                                            SWAP ;
                                            UPDATE ;
                                            SWAP ;
                                            PAIR ;
                                            SWAP ;
                                            PAIR ;
                                            PAIR ;
                                            DUG 3 }
                                          { DIG 3 ;
                                            DUP ;
                                            CDR ;
                                            SWAP ;
                                            CAR ;
                                            DUP ;
                                            CAR ;
                                            SWAP ;
                                            CDR ;
                                            DUP ;
                                            CAR ;
                                            SWAP ;
                                            CDR ;
                                            DIG 4 ;
                                            DUP ;
                                            DUG 5 ;
                                            { CDR ; CDR } ;
                                            SOME ;
                                            DIG 5 ;
                                            DUP ;
                                            DUG 6 ;
                                            { CDR ; CAR } ;
                                            DIG 6 ;
                                            DUP ;
                                            DUG 7 ;
                                            CAR ;
                                            PAIR ;
                                            UPDATE ;
                                            SWAP ;
                                            PAIR ;
                                            SWAP ;
                                            PAIR ;
                                            PAIR ;
                                            DUG 3 } ;
                                       DROP } ;
                                DROP } ;
                         DROP }
                       { DUP ;
                         ITER { DUP ;
                                IF_LEFT
                                  { DROP ;
                                    DUP ;
                                    SENDER ;
                                    SWAP ;
                                    IF_LEFT {} { DROP ; PUSH unit Unit ; FAILWITH } ;
                                    CAR ;
                                    COMPARE ;
                                    EQ ;
                                    IF { PUSH bool True }
                                       { DIG 2 ; DUP ; DUG 3 ; { CAR ; CAR } ; SENDER ; COMPARE ; EQ } ;
                                    IF {}
                                       { PUSH string
                                              "WrongCondition: (update.open_variant('add_operator').owner == sp.sender) | (sp.sender == self.data.administrator)" ;
                                         FAILWITH } ;
                                    DIG 2 ;
                                    DUP ;
                                    DUG 3 ;
                                    DUP ;
                                    CAR ;
                                    SWAP ;
                                    CDR ;
                                    DUP ;
                                    CDR ;
                                    SWAP ;
                                    CAR ;
                                    DUP ;
                                    CAR ;
                                    SWAP ;
                                    CDR ;
                                    PUSH (option unit) (Some Unit) ;
                                    DIG 5 ;
                                    DUP ;
                                    DUG 6 ;
                                    IF_LEFT {} { DROP ; PUSH unit Unit ; FAILWITH } ;
                                    CDR ;
                                    DIG 6 ;
                                    DUP ;
                                    DUG 7 ;
                                    IF_LEFT {} { DROP ; PUSH unit Unit ; FAILWITH } ;
                                    DIG 9 ;
                                    DROP ;
                                    CAR ;
                                    PAIR %owner %operator ;
                                    UPDATE ;
                                    SWAP ;
                                    PAIR ;
                                    PAIR ;
                                    SWAP ;
                                    PAIR ;
                                    DUG 2 }
                                  { DROP ;
                                    DUP ;
                                    SENDER ;
                                    SWAP ;
                                    IF_LEFT { DROP ; PUSH unit Unit ; FAILWITH } {} ;
                                    CAR ;
                                    COMPARE ;
                                    EQ ;
                                    IF { PUSH bool True }
                                       { DIG 2 ; DUP ; DUG 3 ; { CAR ; CAR } ; SENDER ; COMPARE ; EQ } ;
                                    IF {}
                                       { PUSH string
                                              "WrongCondition: (update.open_variant('remove_operator').owner == sp.sender) | (sp.sender == self.data.administrator)" ;
                                         FAILWITH } ;
                                    DIG 2 ;
                                    DUP ;
                                    DUG 3 ;
                                    DUP ;
                                    CAR ;
                                    SWAP ;
                                    CDR ;
                                    DUP ;
                                    CDR ;
                                    SWAP ;
                                    CAR ;
                                    DUP ;
                                    CAR ;
                                    SWAP ;
                                    CDR ;
                                    NONE unit ;
                                    DIG 5 ;
                                    DUP ;
                                    DUG 6 ;
                                    IF_LEFT { DROP ; PUSH unit Unit ; FAILWITH } {} ;
                                    CDR ;
                                    DIG 6 ;
                                    DUP ;
                                    DUG 7 ;
                                    IF_LEFT { DROP ; PUSH unit Unit ; FAILWITH } {} ;
                                    DIG 9 ;
                                    DROP ;
                                    CAR ;
                                    PAIR %owner %operator ;
                                    UPDATE ;
                                    SWAP ;
                                    PAIR ;
                                    PAIR ;
                                    SWAP ;
                                    PAIR ;
                                    DUG 2 } ;
                                DROP } ;
                         DROP } ;
                     NIL operation } } } ;
         PAIR } }